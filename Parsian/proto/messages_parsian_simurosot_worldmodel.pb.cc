// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_parsian_simurosot_worldmodel.proto
#include "stdafx.h"

#include "messages_parsian_simurosot_worldmodel.pb.h"
#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector2D;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MovingObject;
}  // namespace protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto
class Vector2DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector2D>
      _instance;
} _Vector2D_default_instance_;
class MovingObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MovingObject>
      _instance;
} _MovingObject_default_instance_;
class WorldModelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorldModel>
      _instance;
} _WorldModel_default_instance_;
namespace protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto {
static void InitDefaultsVector2D() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Vector2D_default_instance_;
    new (ptr) ::Vector2D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Vector2D::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector2D =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector2D}, {}};

static void InitDefaultsMovingObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MovingObject_default_instance_;
    new (ptr) ::MovingObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MovingObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MovingObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMovingObject}, {
      &protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::scc_info_Vector2D.base,}};

static void InitDefaultsWorldModel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WorldModel_default_instance_;
    new (ptr) ::WorldModel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorldModel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WorldModel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWorldModel}, {
      &protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::scc_info_MovingObject.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Vector2D.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MovingObject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorldModel.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector2D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector2D, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MovingObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MovingObject, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MovingObject, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MovingObject, vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MovingObject, acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MovingObject, angulevelocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MovingObject, direction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldModel, ball_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldModel, our_robots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldModel, opp_robots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldModel, blue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldModel, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldModel, gamestate_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Vector2D)},
  { 7, -1, sizeof(::MovingObject)},
  { 18, -1, sizeof(::WorldModel)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Vector2D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MovingObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WorldModel_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages_parsian_simurosot_worldmodel.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n+messages_parsian_simurosot_worldmodel."
      "proto\" \n\010Vector2D\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\""
      "\215\001\n\014MovingObject\022\n\n\002id\030\001 \001(\r\022\026\n\003pos\030\002 \001("
      "\0132\t.Vector2D\022\026\n\003vel\030\003 \001(\0132\t.Vector2D\022\026\n\003"
      "acc\030\004 \001(\0132\t.Vector2D\022\026\n\016anguleVelocity\030\005"
      " \001(\002\022\021\n\tdirection\030\006 \001(\002\"\252\001\n\nWorldModel\022\033"
      "\n\004ball\030\001 \001(\0132\r.MovingObject\022!\n\nour_robot"
      "s\030\002 \003(\0132\r.MovingObject\022!\n\nopp_robots\030\003 \003"
      "(\0132\r.MovingObject\022\014\n\004blue\030\004 \001(\010\022\014\n\004mode\030"
      "\005 \001(\t\022\035\n\tgameState\030\006 \001(\0162\n.GameState*\231\002\n"
      "\tGameState\022\n\n\006PlayOn\020\000\022\024\n\020FreeBall_LeftT"
      "op\020\001\022\024\n\020FreeBall_LeftBot\020\002\022\025\n\021FreeBall_R"
      "ightTop\020\003\022\025\n\021FreeBall_RightBot\020\004\022\024\n\020Plac"
      "eKick_Yellow\020\005\022\022\n\016PlaceKick_Blue\020\006\022\026\n\022Pe"
      "naltyKick_Yellow\020\007\022\024\n\020PenaltyKick_Blue\020\010"
      "\022\023\n\017FreeKick_Yellow\020\t\022\021\n\rFreeKick_Blue\020\n"
      "\022\023\n\017GoalKick_Yellow\020\013\022\021\n\rGoalKick_Blue\020\014"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 688);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages_parsian_simurosot_worldmodel.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto
const ::google::protobuf::EnumDescriptor* GameState_descriptor() {
  protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::file_level_enum_descriptors[0];
}
bool GameState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Vector2D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector2D::kXFieldNumber;
const int Vector2D::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector2D::Vector2D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::scc_info_Vector2D.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Vector2D)
}
Vector2D::Vector2D(const Vector2D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Vector2D)
}

void Vector2D::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Vector2D::~Vector2D() {
  // @@protoc_insertion_point(destructor:Vector2D)
  SharedDtor();
}

void Vector2D::SharedDtor() {
}

void Vector2D::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector2D::descriptor() {
  ::protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector2D& Vector2D::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::scc_info_Vector2D.base);
  return *internal_default_instance();
}


void Vector2D::Clear() {
// @@protoc_insertion_point(message_clear_start:Vector2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Vector2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Vector2D)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Vector2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Vector2D)
  return false;
#undef DO_
}

void Vector2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Vector2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Vector2D)
}

::google::protobuf::uint8* Vector2D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Vector2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Vector2D)
  return target;
}

size_t Vector2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Vector2D)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector2D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Vector2D)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector2D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector2D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Vector2D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Vector2D)
    MergeFrom(*source);
  }
}

void Vector2D::MergeFrom(const Vector2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Vector2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Vector2D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Vector2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector2D::CopyFrom(const Vector2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Vector2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector2D::IsInitialized() const {
  return true;
}

void Vector2D::Swap(Vector2D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector2D::InternalSwap(Vector2D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector2D::GetMetadata() const {
  protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MovingObject::InitAsDefaultInstance() {
  ::_MovingObject_default_instance_._instance.get_mutable()->pos_ = const_cast< ::Vector2D*>(
      ::Vector2D::internal_default_instance());
  ::_MovingObject_default_instance_._instance.get_mutable()->vel_ = const_cast< ::Vector2D*>(
      ::Vector2D::internal_default_instance());
  ::_MovingObject_default_instance_._instance.get_mutable()->acc_ = const_cast< ::Vector2D*>(
      ::Vector2D::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MovingObject::kIdFieldNumber;
const int MovingObject::kPosFieldNumber;
const int MovingObject::kVelFieldNumber;
const int MovingObject::kAccFieldNumber;
const int MovingObject::kAnguleVelocityFieldNumber;
const int MovingObject::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MovingObject::MovingObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::scc_info_MovingObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MovingObject)
}
MovingObject::MovingObject(const MovingObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::Vector2D(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_vel()) {
    vel_ = new ::Vector2D(*from.vel_);
  } else {
    vel_ = NULL;
  }
  if (from.has_acc()) {
    acc_ = new ::Vector2D(*from.acc_);
  } else {
    acc_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&id_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:MovingObject)
}

void MovingObject::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(direction_));
}

MovingObject::~MovingObject() {
  // @@protoc_insertion_point(destructor:MovingObject)
  SharedDtor();
}

void MovingObject::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete vel_;
  if (this != internal_default_instance()) delete acc_;
}

void MovingObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MovingObject::descriptor() {
  ::protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MovingObject& MovingObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::scc_info_MovingObject.base);
  return *internal_default_instance();
}


void MovingObject::Clear() {
// @@protoc_insertion_point(message_clear_start:MovingObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && vel_ != NULL) {
    delete vel_;
  }
  vel_ = NULL;
  if (GetArenaNoVirtual() == NULL && acc_ != NULL) {
    delete acc_;
  }
  acc_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&id_)) + sizeof(direction_));
  _internal_metadata_.Clear();
}

bool MovingObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MovingObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Vector2D pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Vector2D vel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Vector2D acc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float anguleVelocity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angulevelocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float direction = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &direction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MovingObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MovingObject)
  return false;
#undef DO_
}

void MovingObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MovingObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .Vector2D pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pos(), output);
  }

  // .Vector2D vel = 3;
  if (this->has_vel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_vel(), output);
  }

  // .Vector2D acc = 4;
  if (this->has_acc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_acc(), output);
  }

  // float anguleVelocity = 5;
  if (this->angulevelocity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->angulevelocity(), output);
  }

  // float direction = 6;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->direction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MovingObject)
}

::google::protobuf::uint8* MovingObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MovingObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .Vector2D pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pos(), deterministic, target);
  }

  // .Vector2D vel = 3;
  if (this->has_vel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_vel(), deterministic, target);
  }

  // .Vector2D acc = 4;
  if (this->has_acc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_acc(), deterministic, target);
  }

  // float anguleVelocity = 5;
  if (this->angulevelocity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->angulevelocity(), target);
  }

  // float direction = 6;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->direction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MovingObject)
  return target;
}

size_t MovingObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MovingObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Vector2D pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // .Vector2D vel = 3;
  if (this->has_vel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vel_);
  }

  // .Vector2D acc = 4;
  if (this->has_acc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *acc_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // float anguleVelocity = 5;
  if (this->angulevelocity() != 0) {
    total_size += 1 + 4;
  }

  // float direction = 6;
  if (this->direction() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MovingObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MovingObject)
  GOOGLE_DCHECK_NE(&from, this);
  const MovingObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MovingObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MovingObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MovingObject)
    MergeFrom(*source);
  }
}

void MovingObject::MergeFrom(const MovingObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MovingObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::Vector2D::MergeFrom(from.pos());
  }
  if (from.has_vel()) {
    mutable_vel()->::Vector2D::MergeFrom(from.vel());
  }
  if (from.has_acc()) {
    mutable_acc()->::Vector2D::MergeFrom(from.acc());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.angulevelocity() != 0) {
    set_angulevelocity(from.angulevelocity());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
}

void MovingObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MovingObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MovingObject::CopyFrom(const MovingObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MovingObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MovingObject::IsInitialized() const {
  return true;
}

void MovingObject::Swap(MovingObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MovingObject::InternalSwap(MovingObject* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(vel_, other->vel_);
  swap(acc_, other->acc_);
  swap(id_, other->id_);
  swap(angulevelocity_, other->angulevelocity_);
  swap(direction_, other->direction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MovingObject::GetMetadata() const {
  protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorldModel::InitAsDefaultInstance() {
  ::_WorldModel_default_instance_._instance.get_mutable()->ball_ = const_cast< ::MovingObject*>(
      ::MovingObject::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldModel::kBallFieldNumber;
const int WorldModel::kOurRobotsFieldNumber;
const int WorldModel::kOppRobotsFieldNumber;
const int WorldModel::kBlueFieldNumber;
const int WorldModel::kModeFieldNumber;
const int WorldModel::kGameStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldModel::WorldModel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::scc_info_WorldModel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:WorldModel)
}
WorldModel::WorldModel(const WorldModel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      our_robots_(from.our_robots_),
      opp_robots_(from.opp_robots_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mode().size() > 0) {
    mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mode_);
  }
  if (from.has_ball()) {
    ball_ = new ::MovingObject(*from.ball_);
  } else {
    ball_ = NULL;
  }
  ::memcpy(&blue_, &from.blue_,
    static_cast<size_t>(reinterpret_cast<char*>(&gamestate_) -
    reinterpret_cast<char*>(&blue_)) + sizeof(gamestate_));
  // @@protoc_insertion_point(copy_constructor:WorldModel)
}

void WorldModel::SharedCtor() {
  mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ball_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gamestate_) -
      reinterpret_cast<char*>(&ball_)) + sizeof(gamestate_));
}

WorldModel::~WorldModel() {
  // @@protoc_insertion_point(destructor:WorldModel)
  SharedDtor();
}

void WorldModel::SharedDtor() {
  mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ball_;
}

void WorldModel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorldModel::descriptor() {
  ::protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldModel& WorldModel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::scc_info_WorldModel.base);
  return *internal_default_instance();
}


void WorldModel::Clear() {
// @@protoc_insertion_point(message_clear_start:WorldModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  our_robots_.Clear();
  opp_robots_.Clear();
  mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ball_ != NULL) {
    delete ball_;
  }
  ball_ = NULL;
  ::memset(&blue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gamestate_) -
      reinterpret_cast<char*>(&blue_)) + sizeof(gamestate_));
  _internal_metadata_.Clear();
}

bool WorldModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WorldModel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MovingObject ball = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ball()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MovingObject our_robots = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_our_robots()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MovingObject opp_robots = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_opp_robots()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool blue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mode().data(), static_cast<int>(this->mode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WorldModel.mode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GameState gameState = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gamestate(static_cast< ::GameState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WorldModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WorldModel)
  return false;
#undef DO_
}

void WorldModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WorldModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MovingObject ball = 1;
  if (this->has_ball()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_ball(), output);
  }

  // repeated .MovingObject our_robots = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->our_robots_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->our_robots(static_cast<int>(i)),
      output);
  }

  // repeated .MovingObject opp_robots = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opp_robots_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->opp_robots(static_cast<int>(i)),
      output);
  }

  // bool blue = 4;
  if (this->blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->blue(), output);
  }

  // string mode = 5;
  if (this->mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mode().data(), static_cast<int>(this->mode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WorldModel.mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mode(), output);
  }

  // .GameState gameState = 6;
  if (this->gamestate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->gamestate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WorldModel)
}

::google::protobuf::uint8* WorldModel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WorldModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MovingObject ball = 1;
  if (this->has_ball()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_ball(), deterministic, target);
  }

  // repeated .MovingObject our_robots = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->our_robots_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->our_robots(static_cast<int>(i)), deterministic, target);
  }

  // repeated .MovingObject opp_robots = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opp_robots_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->opp_robots(static_cast<int>(i)), deterministic, target);
  }

  // bool blue = 4;
  if (this->blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->blue(), target);
  }

  // string mode = 5;
  if (this->mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mode().data(), static_cast<int>(this->mode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WorldModel.mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mode(), target);
  }

  // .GameState gameState = 6;
  if (this->gamestate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->gamestate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorldModel)
  return target;
}

size_t WorldModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorldModel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .MovingObject our_robots = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->our_robots_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->our_robots(static_cast<int>(i)));
    }
  }

  // repeated .MovingObject opp_robots = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->opp_robots_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->opp_robots(static_cast<int>(i)));
    }
  }

  // string mode = 5;
  if (this->mode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mode());
  }

  // .MovingObject ball = 1;
  if (this->has_ball()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ball_);
  }

  // bool blue = 4;
  if (this->blue() != 0) {
    total_size += 1 + 1;
  }

  // .GameState gameState = 6;
  if (this->gamestate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gamestate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorldModel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorldModel)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldModel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldModel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorldModel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorldModel)
    MergeFrom(*source);
  }
}

void WorldModel::MergeFrom(const WorldModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorldModel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  our_robots_.MergeFrom(from.our_robots_);
  opp_robots_.MergeFrom(from.opp_robots_);
  if (from.mode().size() > 0) {

    mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mode_);
  }
  if (from.has_ball()) {
    mutable_ball()->::MovingObject::MergeFrom(from.ball());
  }
  if (from.blue() != 0) {
    set_blue(from.blue());
  }
  if (from.gamestate() != 0) {
    set_gamestate(from.gamestate());
  }
}

void WorldModel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorldModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldModel::CopyFrom(const WorldModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorldModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldModel::IsInitialized() const {
  return true;
}

void WorldModel::Swap(WorldModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldModel::InternalSwap(WorldModel* other) {
  using std::swap;
  CastToBase(&our_robots_)->InternalSwap(CastToBase(&other->our_robots_));
  CastToBase(&opp_robots_)->InternalSwap(CastToBase(&other->opp_robots_));
  mode_.Swap(&other->mode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ball_, other->ball_);
  swap(blue_, other->blue_);
  swap(gamestate_, other->gamestate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorldModel::GetMetadata() const {
  protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fworldmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Vector2D* Arena::CreateMaybeMessage< ::Vector2D >(Arena* arena) {
  return Arena::CreateInternal< ::Vector2D >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MovingObject* Arena::CreateMaybeMessage< ::MovingObject >(Arena* arena) {
  return Arena::CreateInternal< ::MovingObject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::WorldModel* Arena::CreateMaybeMessage< ::WorldModel >(Arena* arena) {
  return Arena::CreateInternal< ::WorldModel >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
