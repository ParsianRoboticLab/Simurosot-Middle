// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_parsian_simurosot_detection.proto
#include "stdafx.h"
#include "messages_parsian_simurosot_detection.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RBall;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RRobot;
}  // namespace protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto
class RBallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RBall>
      _instance;
} _RBall_default_instance_;
class RRobotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RRobot>
      _instance;
} _RRobot_default_instance_;
class FrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Frame>
      _instance;
} _Frame_default_instance_;
namespace protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto {
static void InitDefaultsRBall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RBall_default_instance_;
    new (ptr) ::RBall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RBall::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RBall =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRBall}, {}};

static void InitDefaultsRRobot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RRobot_default_instance_;
    new (ptr) ::RRobot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RRobot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RRobot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRRobot}, {}};

static void InitDefaultsFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Frame_default_instance_;
    new (ptr) ::Frame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Frame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Frame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFrame}, {
      &protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::scc_info_RBall.base,
      &protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::scc_info_RRobot.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RBall.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RRobot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Frame.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RBall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RBall, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RBall, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RRobot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RRobot, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RRobot, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RRobot, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RRobot, ang_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Frame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Frame, frame_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Frame, ball_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Frame, robots_yellow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Frame, robots_blue_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::RBall)},
  { 7, -1, sizeof(::RRobot)},
  { 16, -1, sizeof(::Frame)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RBall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RRobot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Frame_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages_parsian_simurosot_detection.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*messages_parsian_simurosot_detection.p"
      "roto\"\035\n\005RBall\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"7\n\006R"
      "Robot\022\n\n\002id\030\001 \001(\r\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022"
      "\013\n\003ang\030\004 \001(\002\"q\n\005Frame\022\024\n\014frame_number\030\001 "
      "\001(\r\022\024\n\004ball\030\002 \001(\0132\006.RBall\022\036\n\rrobots_yell"
      "ow\030\003 \003(\0132\007.RRobot\022\034\n\013robots_blue\030\004 \003(\0132\007"
      ".RRobotb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 255);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages_parsian_simurosot_detection.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto

// ===================================================================

void RBall::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RBall::kXFieldNumber;
const int RBall::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RBall::RBall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::scc_info_RBall.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RBall)
}
RBall::RBall(const RBall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:RBall)
}

void RBall::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

RBall::~RBall() {
  // @@protoc_insertion_point(destructor:RBall)
  SharedDtor();
}

void RBall::SharedDtor() {
}

void RBall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RBall::descriptor() {
  ::protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RBall& RBall::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::scc_info_RBall.base);
  return *internal_default_instance();
}


void RBall::Clear() {
// @@protoc_insertion_point(message_clear_start:RBall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool RBall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RBall)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RBall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RBall)
  return false;
#undef DO_
}

void RBall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RBall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RBall)
}

::google::protobuf::uint8* RBall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RBall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RBall)
  return target;
}

size_t RBall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RBall)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RBall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RBall)
  GOOGLE_DCHECK_NE(&from, this);
  const RBall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RBall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RBall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RBall)
    MergeFrom(*source);
  }
}

void RBall::MergeFrom(const RBall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RBall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void RBall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RBall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RBall::CopyFrom(const RBall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RBall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RBall::IsInitialized() const {
  return true;
}

void RBall::Swap(RBall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RBall::InternalSwap(RBall* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RBall::GetMetadata() const {
  protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RRobot::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RRobot::kIdFieldNumber;
const int RRobot::kXFieldNumber;
const int RRobot::kYFieldNumber;
const int RRobot::kAngFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RRobot::RRobot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::scc_info_RRobot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RRobot)
}
RRobot::RRobot(const RRobot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ang_) -
    reinterpret_cast<char*>(&id_)) + sizeof(ang_));
  // @@protoc_insertion_point(copy_constructor:RRobot)
}

void RRobot::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ang_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ang_));
}

RRobot::~RRobot() {
  // @@protoc_insertion_point(destructor:RRobot)
  SharedDtor();
}

void RRobot::SharedDtor() {
}

void RRobot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RRobot::descriptor() {
  ::protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RRobot& RRobot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::scc_info_RRobot.base);
  return *internal_default_instance();
}


void RRobot::Clear() {
// @@protoc_insertion_point(message_clear_start:RRobot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ang_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ang_));
  _internal_metadata_.Clear();
}

bool RRobot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RRobot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ang = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RRobot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RRobot)
  return false;
#undef DO_
}

void RRobot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RRobot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // float x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float ang = 4;
  if (this->ang() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ang(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RRobot)
}

::google::protobuf::uint8* RRobot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RRobot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // float x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float ang = 4;
  if (this->ang() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ang(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RRobot)
  return target;
}

size_t RRobot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RRobot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // float x = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float ang = 4;
  if (this->ang() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RRobot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RRobot)
  GOOGLE_DCHECK_NE(&from, this);
  const RRobot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RRobot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RRobot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RRobot)
    MergeFrom(*source);
  }
}

void RRobot::MergeFrom(const RRobot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RRobot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.ang() != 0) {
    set_ang(from.ang());
  }
}

void RRobot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RRobot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RRobot::CopyFrom(const RRobot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RRobot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RRobot::IsInitialized() const {
  return true;
}

void RRobot::Swap(RRobot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RRobot::InternalSwap(RRobot* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(ang_, other->ang_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RRobot::GetMetadata() const {
  protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Frame::InitAsDefaultInstance() {
  ::_Frame_default_instance_._instance.get_mutable()->ball_ = const_cast< ::RBall*>(
      ::RBall::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Frame::kFrameNumberFieldNumber;
const int Frame::kBallFieldNumber;
const int Frame::kRobotsYellowFieldNumber;
const int Frame::kRobotsBlueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Frame::Frame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::scc_info_Frame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Frame)
}
Frame::Frame(const Frame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      robots_yellow_(from.robots_yellow_),
      robots_blue_(from.robots_blue_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ball()) {
    ball_ = new ::RBall(*from.ball_);
  } else {
    ball_ = NULL;
  }
  frame_number_ = from.frame_number_;
  // @@protoc_insertion_point(copy_constructor:Frame)
}

void Frame::SharedCtor() {
  ::memset(&ball_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_number_) -
      reinterpret_cast<char*>(&ball_)) + sizeof(frame_number_));
}

Frame::~Frame() {
  // @@protoc_insertion_point(destructor:Frame)
  SharedDtor();
}

void Frame::SharedDtor() {
  if (this != internal_default_instance()) delete ball_;
}

void Frame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Frame::descriptor() {
  ::protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Frame& Frame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::scc_info_Frame.base);
  return *internal_default_instance();
}


void Frame::Clear() {
// @@protoc_insertion_point(message_clear_start:Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robots_yellow_.Clear();
  robots_blue_.Clear();
  if (GetArenaNoVirtual() == NULL && ball_ != NULL) {
    delete ball_;
  }
  ball_ = NULL;
  frame_number_ = 0u;
  _internal_metadata_.Clear();
}

bool Frame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Frame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 frame_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frame_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RBall ball = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ball()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RRobot robots_yellow = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_robots_yellow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RRobot robots_blue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_robots_blue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Frame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Frame)
  return false;
#undef DO_
}

void Frame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 frame_number = 1;
  if (this->frame_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->frame_number(), output);
  }

  // .RBall ball = 2;
  if (this->has_ball()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ball(), output);
  }

  // repeated .RRobot robots_yellow = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->robots_yellow_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->robots_yellow(static_cast<int>(i)),
      output);
  }

  // repeated .RRobot robots_blue = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->robots_blue_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->robots_blue(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Frame)
}

::google::protobuf::uint8* Frame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 frame_number = 1;
  if (this->frame_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->frame_number(), target);
  }

  // .RBall ball = 2;
  if (this->has_ball()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ball(), deterministic, target);
  }

  // repeated .RRobot robots_yellow = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->robots_yellow_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->robots_yellow(static_cast<int>(i)), deterministic, target);
  }

  // repeated .RRobot robots_blue = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->robots_blue_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->robots_blue(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Frame)
  return target;
}

size_t Frame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Frame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .RRobot robots_yellow = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->robots_yellow_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->robots_yellow(static_cast<int>(i)));
    }
  }

  // repeated .RRobot robots_blue = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->robots_blue_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->robots_blue(static_cast<int>(i)));
    }
  }

  // .RBall ball = 2;
  if (this->has_ball()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ball_);
  }

  // uint32 frame_number = 1;
  if (this->frame_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frame_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Frame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Frame)
  GOOGLE_DCHECK_NE(&from, this);
  const Frame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Frame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Frame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Frame)
    MergeFrom(*source);
  }
}

void Frame::MergeFrom(const Frame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Frame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  robots_yellow_.MergeFrom(from.robots_yellow_);
  robots_blue_.MergeFrom(from.robots_blue_);
  if (from.has_ball()) {
    mutable_ball()->::RBall::MergeFrom(from.ball());
  }
  if (from.frame_number() != 0) {
    set_frame_number(from.frame_number());
  }
}

void Frame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Frame::CopyFrom(const Frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Frame::IsInitialized() const {
  return true;
}

void Frame::Swap(Frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Frame::InternalSwap(Frame* other) {
  using std::swap;
  CastToBase(&robots_yellow_)->InternalSwap(CastToBase(&other->robots_yellow_));
  CastToBase(&robots_blue_)->InternalSwap(CastToBase(&other->robots_blue_));
  swap(ball_, other->ball_);
  swap(frame_number_, other->frame_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Frame::GetMetadata() const {
  protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_5fparsian_5fsimurosot_5fdetection_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RBall* Arena::CreateMaybeMessage< ::RBall >(Arena* arena) {
  return Arena::CreateInternal< ::RBall >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RRobot* Arena::CreateMaybeMessage< ::RRobot >(Arena* arena) {
  return Arena::CreateInternal< ::RRobot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Frame* Arena::CreateMaybeMessage< ::Frame >(Arena* arena) {
  return Arena::CreateInternal< ::Frame >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
